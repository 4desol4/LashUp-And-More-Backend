generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String         @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String         @unique
  password  String
  role      String         @default("user")
  bookings  Booking[]
  orders    ProductOrder[]
  createdAt DateTime       @default(now())
  updatedAt DateTime?      @updatedAt
}

model Booking {
  id        String        @id @default(auto()) @map("_id") @db.ObjectId
  service   String
  date      DateTime
  user      User          @relation(fields: [userId], references: [id])
  userId    String        @db.ObjectId
  status    BookingStatus @default(PENDING)
  createdAt DateTime      @default(now())
}

model Product {
  id          String         @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  price       Float
  imageUrl    String
  isActive    Boolean        @default(true)
  createdAt   DateTime       @default(now())
  orders      ProductOrder[]
}

model ProductOrder {
  id          String             @id @default(auto()) @map("_id") @db.ObjectId
  user        User               @relation(fields: [userId], references: [id])
  userId      String             @db.ObjectId
  product     Product            @relation(fields: [productId], references: [id])
  productId   String             @db.ObjectId
  quantity    Int                @default(1)
  status      ProductOrderStatus @default(PENDING)
  cancelledBy String?
  createdAt   DateTime           @default(now())
}

model GalleryItem {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  type      String
  url       String
  createdAt DateTime @default(now())
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
}

enum ProductOrderStatus {
  PENDING
  CONFIRMED
  SHIPPED
  DELIVERED
  CANCELLED
}
